#! /usr/local/bin/python
# Add/remove/update/dump messagess

import sys, os
import optparse
from bacula_tools import Messages, Bacula_Factory, MESSAGES, ID, DATA

# {{{ Parser configuration and sanity checking.  Also, "bacula" is instantiated in here

parser = optparse.OptionParser(description='Manage Bacula messages.', usage='usage: %prog [options] [message]')
parser.add_option('--create', dest='create', action='store_true',
                   default=False, help='Create the given message')
parser.add_option('--delete', dest='delete', action='store_true',
                   default=False, help='Delete the given message')
parser.add_option('--set', dest='set', 
                   help='Set the blob for the given message')
parser.add_option('--rename', dest='rename', 
                   help='Rename the given message')
parser.add_option('--list', dest='list', action='store_true',
                   default=False, help='List the available messages')

(args, messages_arg) = parser.parse_args()
bacula = Bacula_Factory()        # Instantiate our DB connection thingy

if args.delete and (args.create or args.set or args.rename):
    bacula.die('','If you delete then there is no sense in doing anything else.',
               "You didn't think this one out very well, did you?.")

# }}}

if args.list:
    print bacula.formatted_query_result('select name from %s order by name' % MESSAGES, infix='\n')
    if not messages_arg: exit()
if not messages_arg:
    parser.print_help()
    exit()

s = Messages()
if args.create: s._set_name(messages_arg[0])

s.search(messages_arg[0])
if not s[ID]:
    print 'No such message definition: %s' % messages_arg[0],
    exit()

if args.delete:
    s.delete()
    print 'Deleted messages:', messages_arg[0]
    exit()                      # Nothing to print out now
    
if args.rename: s.change_name(args.rename)
if args.set: s._set(DATA, args.set)
print s
exit()
