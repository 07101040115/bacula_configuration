#! /usr/local/bin/python
# Add/remove/update/dump directors
from __future__ import print_function

import sys, os
import optparse
from bacula_tools import *

# {{{ Parser configuration and sanity checking.  Also, "bacula" is instantiated in here

parser = optparse.OptionParser(description='Manage Bacula directors.', usage='usage: %prog [options] [director]')
parser.add_option('--create', action='store_true',
                   default=False, help='Create the given director')
parser.add_option('--delete', action='store_true',
                   default=False, help='Delete the given director')
parser.add_option('--rename', metavar='NEW_NAME',
                   help='Rename the given director')
parser.add_option('--list', action='store_true',
                   default=False, help='List the available directors')

group = optparse.OptionGroup(parser, "Setters",
                             "These options are used for setting various values.  "
                             "Use an empty string, e.g. '' to unset the value for strings variables.  "
                             "You should be aware that no sanity checking is done here, so it is quite possible "
                             "to break your configuration while using them.  Caveat emptor."
                             )
keylist = Director.NULL_KEYS  + [MONITOR, DIRADDRESSES]
for key in keylist:
    if not type(key) == str: key = key[0]
    group.add_option('--' + key)
group.add_option('--' + MESSAGES, help='The name of a message resource')
parser.add_option_group(group)

(args, director_arg) = parser.parse_args()
bacula = Bacula_Factory()        # Instantiate our DB connection thingy

if args.delete and (args.create or args.set or args.rename):
    bacula.die('','If you delete then there is no sense in doing anything else.',
               "You didn't think this one out very well, did you?.")

# }}}

if args.list:
    print(bacula.formatted_query_result('select name from %s order by name' % DIRECTORS, infix='\n'))
    if not director_arg: exit()
if not director_arg:
    parser.print_help()
    exit()

s = Director()
if args.create: s._set_name(director_arg[0])

s.search(director_arg[0])
if not s[ID]:
    print('No such directory: %s' % director_arg[0])
    exit()

if args.delete:
    s.delete()
    print('Deleted director:', director_arg[0])
    exit()                      # Nothing to print out now
    
if args.rename: s.change_name(args.rename)
generic_option_processor(s, args, Director.NULL_KEYS)
generic_option_processor(s, args, [MONITOR,], boolean=True)
generic_option_processor(s, args, [MESSAGES,], dereference=True)

print('Director config', s, '','', sep='\n')
print('File Daemon config', s.fd(), '', sep='\n')
exit()
